{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\project4\\\\frontend\\\\src\\\\components\\\\ReviewsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createReview, fetchProfs, fetchCourses } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewsPage() {\n  _s();\n  const [newReview, setNewReview] = useState({\n    course_id: '',\n    review_text: '',\n    ratings: 0,\n    professor_id: ''\n  });\n  const [profs, setProfs] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [filteredCourses, setFilteredCourses] = useState([]);\n  useEffect(() => {\n    const loadProfs = async () => {\n      try {\n        const profsData = await fetchProfs();\n        setProfs(profsData);\n      } catch (error) {\n        console.error('Failed to fetch professors', error);\n      }\n    };\n    const loadCourses = async () => {\n      try {\n        const coursesData = await fetchCourses();\n        setCourses(coursesData);\n      } catch (error) {\n        console.error('Failed to fetch courses', error);\n      }\n    };\n    loadProfs();\n    loadCourses();\n  }, []);\n  useEffect(() => {\n    const filtered = courses.filter(course => course.professor_id === newReview.professor_id);\n    setFilteredCourses(filtered);\n  }, [newReview.professor_id, courses]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewReview(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleRatingChange = rating => {\n    setNewReview(prevState => ({\n      ...prevState,\n      ratings: rating\n    }));\n  };\n  const handleCreateReview = async () => {\n    try {\n      // Check all fields are filled\n      if (!newReview.professor_id || !newReview.course_id || !newReview.review_text || !newReview.ratings) {\n        alert('Please fill out all fields before submitting your review.');\n        return;\n      }\n\n      // Send review to API\n      const response = await createReview({\n        professor_id: newReview.professor_id,\n        course_id: newReview.course_id,\n        review_text: newReview.review_text,\n        ratings: newReview.ratings\n      });\n      if (response) {\n        alert('Review submitted successfully!');\n        setNewReview({\n          course_id: '',\n          review_text: '',\n          ratings: 0,\n          professor_id: ''\n        });\n      } else {\n        alert('Failed to submit review. Please try again.');\n      }\n    } catch (error) {\n      console.error('Error submitting revie:', error);\n      alert('An error occurred while submitting the review. Please check your input and try again.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"professor_id\",\n      value: newReview.professor_id,\n      onChange: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), profs.map(prof => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: prof.professor_id,\n        children: prof.name\n      }, prof.professor_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"course_id\",\n      value: newReview.course_id,\n      onChange: handleInputChange,\n      disabled: !newReview.professor_id,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), filteredCourses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: course.course_id,\n        children: course.course_name\n      }, course.course_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"review_text\",\n      value: newReview.review_text,\n      onChange: handleInputChange,\n      placeholder: \"Write your review here...\",\n      rows: \"5\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleRatingChange(star),\n        style: {\n          cursor: 'pointer',\n          fontSize: '1.5em',\n          color: newReview.ratings >= star ? '#FFD700' : '#CCCCCC'\n        },\n        children: \"\\u2605\"\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateReview,\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewsPage, \"dQ94J2UPPU1AOfOuVRZyJHHxumo=\");\n_c = ReviewsPage;\nexport default ReviewsPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewsPage\");","map":{"version":3,"names":["React","useState","useEffect","createReview","fetchProfs","fetchCourses","jsxDEV","_jsxDEV","ReviewsPage","_s","newReview","setNewReview","course_id","review_text","ratings","professor_id","profs","setProfs","courses","setCourses","filteredCourses","setFilteredCourses","loadProfs","profsData","error","console","loadCourses","coursesData","filtered","filter","course","handleInputChange","e","name","value","target","prevState","handleRatingChange","rating","handleCreateReview","alert","response","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","prof","disabled","course_name","placeholder","rows","style","width","star","onClick","cursor","fontSize","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/components/ReviewsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createReview, fetchProfs, fetchCourses } from '../services/api';\r\n\r\nfunction ReviewsPage() {\r\n  const [newReview, setNewReview] = useState({ course_id: '', review_text: '', ratings: 0, professor_id: '' });\r\n  const [profs, setProfs] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [filteredCourses, setFilteredCourses] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadProfs = async () => {\r\n      try {\r\n        const profsData = await fetchProfs();\r\n        setProfs(profsData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch professors', error);\r\n      }\r\n    };\r\n\r\n    const loadCourses = async () => {\r\n      try {\r\n        const coursesData = await fetchCourses();\r\n        setCourses(coursesData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch courses', error);\r\n      }\r\n    };\r\n\r\n    loadProfs();\r\n    loadCourses();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filtered = courses.filter(course => course.professor_id === newReview.professor_id);\r\n    setFilteredCourses(filtered);\r\n  }, [newReview.professor_id, courses]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewReview(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleRatingChange = (rating) => {\r\n    setNewReview(prevState => ({ ...prevState, ratings: rating }));\r\n  };\r\n\r\n  const handleCreateReview = async () => {\r\n    try {\r\n      // Check all fields are filled\r\n      if (!newReview.professor_id || !newReview.course_id || !newReview.review_text || !newReview.ratings) {\r\n        alert('Please fill out all fields before submitting your review.');\r\n        return;\r\n      }\r\n  \r\n      // Send review to API\r\n      const response = await createReview({\r\n        professor_id: newReview.professor_id,\r\n        course_id: newReview.course_id,\r\n        review_text: newReview.review_text,\r\n        ratings: newReview.ratings,\r\n      });\r\n  \r\n      if (response) {\r\n        alert('Review submitted successfully!');\r\n        setNewReview({ course_id: '', review_text: '', ratings: 0, professor_id: '' });\r\n      } else {\r\n        alert('Failed to submit review. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting revie:', error);\r\n      alert('An error occurred while submitting the review. Please check your input and try again.');\r\n    }\r\n  };\r\n  \r\n\r\n  return (\r\n    <div>\r\n      <h1>Leave a Review</h1>\r\n      <select\r\n        name=\"professor_id\"\r\n        value={newReview.professor_id}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value=\"\">Select Professor</option>\r\n        {profs.map(prof => (\r\n          <option key={prof.professor_id} value={prof.professor_id}>\r\n            {prof.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select\r\n        name=\"course_id\"\r\n        value={newReview.course_id}\r\n        onChange={handleInputChange}\r\n        disabled={!newReview.professor_id}\r\n      >\r\n        <option value=\"\">Select Course</option>\r\n        {filteredCourses.map(course => (\r\n          <option key={course.course_id} value={course.course_id}>\r\n            {course.course_name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <textarea\r\n        name=\"review_text\"\r\n        value={newReview.review_text}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Write your review here...\"\r\n        rows=\"5\"\r\n        style={{ width: '100%' }}\r\n      />\r\n\r\n      <div>\r\n        <p>Rating:</p>\r\n        {[1, 2, 3, 4, 5].map(star => (\r\n          <span\r\n            key={star}\r\n            onClick={() => handleRatingChange(star)}\r\n            style={{\r\n              cursor: 'pointer',\r\n              fontSize: '1.5em',\r\n              color: newReview.ratings >= star ? '#FFD700' : '#CCCCCC',\r\n            }}\r\n          >\r\n            ★\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={handleCreateReview}>Submit Review</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}