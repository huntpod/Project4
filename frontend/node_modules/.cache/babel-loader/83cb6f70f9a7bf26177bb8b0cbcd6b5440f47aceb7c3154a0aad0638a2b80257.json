{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\project4\\\\frontend\\\\src\\\\components\\\\AdminPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchDepartments, createDepartment, updateDepartment, deleteDepartment, fetchProfs, createProf, updateProf, deleteProf } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction AdminPage() {\n  _s();\n  const [departments, setDepartments] = useState([]);\n  const [profs, setProfs] = useState([]);\n  const [newDepartment, setNewDepartment] = useState({\n    department_name: ''\n  });\n  const [newProf, setNewProf] = useState({\n    name: '',\n    email: '',\n    password: ''\n  });\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const departmentsData = await fetchDepartments();\n        setDepartments(departmentsData);\n        const profsData = await fetchProfs();\n        setProfs(profsData);\n      } catch (error) {\n        console.error('Failed to fetch data', error);\n      }\n    };\n    loadData();\n  }, []);\n  const handleCreateDepartment = async () => {\n    try {\n      const createdDepartment = await createDepartment(newDepartment);\n      setDepartments([...departments, createdDepartment]);\n      setNewDepartment({\n        department_name: ''\n      });\n    } catch (error) {\n      console.error('Failed to create department', error);\n    }\n  };\n  const handleCreateProf = async () => {\n    try {\n      const createdProf = await createProf(newProf);\n      setProfs([...profs, createdProf]);\n      setNewProf({\n        name: '',\n        email: '',\n        password: ''\n      });\n    } catch (error) {\n      console.error('Failed to create professor', error);\n    }\n  };\n  const handleDeleteDepartment = async departmentId => {\n    try {\n      await deleteDepartment(departmentId);\n      setDepartments(departments.filter(dep => dep.department_id !== departmentId));\n    } catch (error) {\n      console.error('Failed to delete department', error);\n    }\n  };\n  const handleDeleteProf = async profId => {\n    try {\n      await deleteProf(profId);\n      setProfs(profs.filter(prof => prof.professor_id !== profId));\n    } catch (error) {\n      console.error('Failed to delete professor', error);\n    }\n  };\n\n  // Similar input change handlers and state management goes here...\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Admin Page\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Departments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"department_name\",\n      value: newDepartment.department_name,\n      onChange: e => setNewDepartment({\n        department_name: e.target.value\n      }),\n      placeholder: \"Department Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateDepartment,\n      children: \"Create Department\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: departments.map(dep => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [dep.department_name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteDepartment(dep.department_id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, dep.department_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Professors\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: newProf.name,\n      onChange: e => setNewProf({\n        ...newProf,\n        name: e.target.value\n      }),\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"email\",\n      value: newProf.email,\n      onChange: e => setNewProf({\n        ...newProf,\n        email: e.target.value\n      }),\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"password\",\n      name: \"password\",\n      value: newProf.password,\n      onChange: e => setNewProf({\n        ...newProf,\n        password: e.target.value\n      }),\n      placeholder: \"Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateProf,\n      children: \"Create Professor\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: profs.map(prof => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [prof.name, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteProf(prof.professor_id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 13\n        }, this)]\n      }, prof.professor_id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n_s(AdminPage, \"zsH3cINYm4HLjiF490T6HJ8qp3A=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useState","useEffect","fetchDepartments","createDepartment","updateDepartment","deleteDepartment","fetchProfs","createProf","updateProf","deleteProf","jsxDEV","_jsxDEV","AdminPage","_s","departments","setDepartments","profs","setProfs","newDepartment","setNewDepartment","department_name","newProf","setNewProf","name","email","password","loadData","departmentsData","profsData","error","console","handleCreateDepartment","createdDepartment","handleCreateProf","createdProf","handleDeleteDepartment","departmentId","filter","dep","department_id","handleDeleteProf","profId","prof","professor_id","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","map","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/components/AdminPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchDepartments, createDepartment, updateDepartment, deleteDepartment, fetchProfs, createProf, updateProf, deleteProf } from '../services/api';\r\n\r\nfunction AdminPage() {\r\n  const [departments, setDepartments] = useState([]);\r\n  const [profs, setProfs] = useState([]);\r\n  const [newDepartment, setNewDepartment] = useState({ department_name: '' });\r\n  const [newProf, setNewProf] = useState({ name: '', email: '', password: '' });\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const departmentsData = await fetchDepartments();\r\n        setDepartments(departmentsData);\r\n        const profsData = await fetchProfs();\r\n        setProfs(profsData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch data', error);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleCreateDepartment = async () => {\r\n    try {\r\n      const createdDepartment = await createDepartment(newDepartment);\r\n      setDepartments([...departments, createdDepartment]);\r\n      setNewDepartment({ department_name: '' });\r\n    } catch (error) {\r\n      console.error('Failed to create department', error);\r\n    }\r\n  };\r\n\r\n  const handleCreateProf = async () => {\r\n    try {\r\n      const createdProf = await createProf(newProf);\r\n      setProfs([...profs, createdProf]);\r\n      setNewProf({ name: '', email: '', password: '' });\r\n    } catch (error) {\r\n      console.error('Failed to create professor', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteDepartment = async (departmentId) => {\r\n    try {\r\n      await deleteDepartment(departmentId);\r\n      setDepartments(departments.filter(dep => dep.department_id !== departmentId));\r\n    } catch (error) {\r\n      console.error('Failed to delete department', error);\r\n    }\r\n  };\r\n\r\n  const handleDeleteProf = async (profId) => {\r\n    try {\r\n      await deleteProf(profId);\r\n      setProfs(profs.filter(prof => prof.professor_id !== profId));\r\n    } catch (error) {\r\n      console.error('Failed to delete professor', error);\r\n    }\r\n  };\r\n\r\n  // Similar input change handlers and state management goes here...\r\n\r\n  return (\r\n    <div>\r\n      <h1>Admin Page</h1>\r\n      <h2>Manage Departments</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"department_name\"\r\n        value={newDepartment.department_name}\r\n        onChange={(e) => setNewDepartment({ department_name: e.target.value })}\r\n        placeholder=\"Department Name\"\r\n      />\r\n      <button onClick={handleCreateDepartment}>Create Department</button>\r\n      <ul>\r\n        {departments.map(dep => (\r\n          <li key={dep.department_id}>\r\n            {dep.department_name}\r\n            <button onClick={() => handleDeleteDepartment(dep.department_id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <h2>Manage Professors</h2>\r\n      <input\r\n        type=\"text\"\r\n        name=\"name\"\r\n        value={newProf.name}\r\n        onChange={(e) => setNewProf({ ...newProf, name: e.target.value })}\r\n        placeholder=\"Name\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"email\"\r\n        value={newProf.email}\r\n        onChange={(e) => setNewProf({ ...newProf, email: e.target.value })}\r\n        placeholder=\"Email\"\r\n      />\r\n      <input\r\n        type=\"password\"\r\n        name=\"password\"\r\n        value={newProf.password}\r\n        onChange={(e) => setNewProf({ ...newProf, password: e.target.value })}\r\n        placeholder=\"Password\"\r\n      />\r\n      <button onClick={handleCreateProf}>Create Professor</button>\r\n      <ul>\r\n        {profs.map(prof => (\r\n          <li key={prof.professor_id}>\r\n            {prof.name}\r\n            <button onClick={() => handleDeleteProf(prof.professor_id)}>Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AdminPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}