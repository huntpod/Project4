{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom/client';import Home from'./components/Home';import Admin from'./components/Admin';import{jsx as _jsx}from\"react/jsx-runtime\";const root=ReactDOM.createRoot(document.getElementById('root'));// Detect whether we are loading index.html or admin.html\nconst isAdminPage=window.location.pathname.includes('admin.html');if(isAdminPage){root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Admin,{})}));}else{root.render(/*#__PURE__*/_jsx(React.StrictMode,{children:/*#__PURE__*/_jsx(Home,{})}));}","map":{"version":3,"names":["React","ReactDOM","Home","Admin","jsx","_jsx","root","createRoot","document","getElementById","isAdminPage","window","location","pathname","includes","render","StrictMode","children"],"sources":["C:/xampp/htdocs/projects/project3/frontend/src/index.js"],"sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport Home from './components/Home';\nimport Admin from './components/Admin';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\n\n// Detect whether we are loading index.html or admin.html\nconst isAdminPage = window.location.pathname.includes('admin.html');\n\nif (isAdminPage) {\n    root.render(\n        <React.StrictMode>\n            <Admin />\n        </React.StrictMode>\n    );\n} else {\n    root.render(\n        <React.StrictMode>\n            <Home />\n        </React.StrictMode>\n    );\n}\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,MAAO,CAAAC,QAAQ,KAAM,kBAAkB,CACvC,MAAO,CAAAC,IAAI,KAAM,mBAAmB,CACpC,MAAO,CAAAC,KAAK,KAAM,oBAAoB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEvC,KAAM,CAAAC,IAAI,CAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAEjE;AACA,KAAM,CAAAC,WAAW,CAAGC,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,QAAQ,CAAC,YAAY,CAAC,CAEnE,GAAIJ,WAAW,CAAE,CACbJ,IAAI,CAACS,MAAM,cACPV,IAAA,CAACL,KAAK,CAACgB,UAAU,EAAAC,QAAA,cACbZ,IAAA,CAACF,KAAK,GAAE,CAAC,CACK,CACtB,CAAC,CACL,CAAC,IAAM,CACHG,IAAI,CAACS,MAAM,cACPV,IAAA,CAACL,KAAK,CAACgB,UAAU,EAAAC,QAAA,cACbZ,IAAA,CAACH,IAAI,GAAE,CAAC,CACM,CACtB,CAAC,CACL","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}