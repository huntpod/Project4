{"ast":null,"code":"const API_BASE = 'http://localhost/projects/project4/api/index.php';\n\n// Helpers\nconst checkResponse = async response => {\n  if (!response.ok) {\n    const errorData = await response.json();\n    throw new Error(errorData.message || 'Failed to fetch data');\n  }\n  return await response.json();\n};\n\n// Admins\nexport const fetchAdmins = async () => {\n  const response = await fetch(`${API_BASE}?resource=admins`);\n  return await checkResponse(response);\n};\nexport const createAdmin = async admin => {\n  const response = await fetch(`${API_BASE}?resource=admins`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(admin)\n  });\n  return await checkResponse(response);\n};\nexport const updateAdmin = async admin => {\n  const response = await fetch(`${API_BASE}?resource=admins`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(admin)\n  });\n  return await checkResponse(response);\n};\nexport const deleteAdmin = async adminId => {\n  const response = await fetch(`${API_BASE}?resource=admins&id=${adminId}`, {\n    method: 'DELETE'\n  });\n  return await checkResponse(response);\n};\n\n// Professors\nexport const fetchProfs = async () => {\n  const response = await fetch(`${API_BASE}?resource=profs`);\n  return await checkResponse(response);\n};\nexport const createProf = async prof => {\n  const response = await fetch(`${API_BASE}?resource=profs`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(prof)\n  });\n  return await checkResponse(response);\n};\nexport const updateProf = async prof => {\n  const response = await fetch(`${API_BASE}?resource=profs`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(prof)\n  });\n  return await checkResponse(response);\n};\nexport const deleteProf = async profId => {\n  const response = await fetch(`${API_BASE}?resource=profs&id=${profId}`, {\n    method: 'DELETE'\n  });\n  return await checkResponse(response);\n};\n\n// Departments\nexport const fetchDepartments = async () => {\n  const response = await fetch(`${API_BASE}?resource=departments`);\n  return await checkResponse(response);\n};\nexport const createDepartment = async department => {\n  const response = await fetch(`${API_BASE}?resource=departments`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(department)\n  });\n  return await checkResponse(response);\n};\nexport const updateDepartment = async department => {\n  const response = await fetch(`${API_BASE}?resource=departments`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(department)\n  });\n  return await checkResponse(response);\n};\nexport const deleteDepartment = async departmentId => {\n  const response = await fetch(`${API_BASE}?resource=departments&id=${departmentId}`, {\n    method: 'DELETE'\n  });\n  return await checkResponse(response);\n};\n\n// Courses\nexport const fetchCourses = async () => {\n  const response = await fetch(`${API_BASE}?resource=courses`);\n  return await checkResponse(response);\n};\nexport const createCourse = async course => {\n  const response = await fetch(`${API_BASE}?resource=courses`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(course)\n  });\n  return await checkResponse(response);\n};\nexport const updateCourse = async course => {\n  const response = await fetch(`${API_BASE}?resource=courses`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(course)\n  });\n  return await checkResponse(response);\n};\nexport const deleteCourse = async courseId => {\n  const response = await fetch(`${API_BASE}?resource=courses&id=${courseId}`, {\n    method: 'DELETE'\n  });\n  return await checkResponse(response);\n};\n\n// Reviews\nexport const fetchReviews = async () => {\n  const response = await fetch(`${API_BASE}?resource=reviews`);\n  return await checkResponse(response);\n};\nexport const createReview = async review => {\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  return await checkResponse(response);\n};\nexport const updateReview = async review => {\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\n    method: 'PUT',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(review)\n  });\n  return await checkResponse(response);\n};\nexport const deleteReview = async reviewId => {\n  const response = await fetch(`${API_BASE}?resource=reviews&id=${reviewId}`, {\n    method: 'DELETE'\n  });\n  return await checkResponse(response);\n};","map":{"version":3,"names":["API_BASE","checkResponse","response","ok","errorData","json","Error","message","fetchAdmins","fetch","createAdmin","admin","method","headers","body","JSON","stringify","updateAdmin","deleteAdmin","adminId","fetchProfs","createProf","prof","updateProf","deleteProf","profId","fetchDepartments","createDepartment","department","updateDepartment","deleteDepartment","departmentId","fetchCourses","createCourse","course","updateCourse","deleteCourse","courseId","fetchReviews","createReview","review","updateReview","deleteReview","reviewId"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = 'http://localhost/projects/project4/api/index.php';\r\n\r\n// Helpers\r\nconst checkResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Failed to fetch data');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\n// Admins\r\nexport const fetchAdmins = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=admins`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createAdmin = async (admin) => {\r\n  const response = await fetch(`${API_BASE}?resource=admins`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(admin),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateAdmin = async (admin) => {\r\n  const response = await fetch(`${API_BASE}?resource=admins`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(admin),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteAdmin = async (adminId) => {\r\n  const response = await fetch(`${API_BASE}?resource=admins&id=${adminId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Professors\r\nexport const fetchProfs = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=profs`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createProf = async (prof) => {\r\n  const response = await fetch(`${API_BASE}?resource=profs`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(prof),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateProf = async (prof) => {\r\n  const response = await fetch(`${API_BASE}?resource=profs`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(prof),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteProf = async (profId) => {\r\n  const response = await fetch(`${API_BASE}?resource=profs&id=${profId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Departments\r\nexport const fetchDepartments = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=departments`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createDepartment = async (department) => {\r\n  const response = await fetch(`${API_BASE}?resource=departments`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(department),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateDepartment = async (department) => {\r\n  const response = await fetch(`${API_BASE}?resource=departments`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(department),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteDepartment = async (departmentId) => {\r\n  const response = await fetch(`${API_BASE}?resource=departments&id=${departmentId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Courses\r\nexport const fetchCourses = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=courses`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createCourse = async (course) => {\r\n  const response = await fetch(`${API_BASE}?resource=courses`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(course),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateCourse = async (course) => {\r\n  const response = await fetch(`${API_BASE}?resource=courses`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(course),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteCourse = async (courseId) => {\r\n  const response = await fetch(`${API_BASE}?resource=courses&id=${courseId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Reviews\r\nexport const fetchReviews = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createReview = async (review) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(review),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateReview = async (review) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(review),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteReview = async (reviewId) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews&id=${reviewId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}