{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\project4\\\\frontend\\\\src\\\\components\\\\ReviewsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewsPage() {\n  _s();\n  const [newReview, setNewReview] = useState({\n    course_id: '',\n    review_text: '',\n    ratings: 0,\n    professor_id: ''\n  });\n  const [profs, setProfs] = useState([]);\n  const [courses, setCourses] = useState([]);\n  const [filteredCourses, setFilteredCourses] = useState([]);\n\n  // Fetch professors and courses on mount\n  useEffect(() => {\n    const fetchProfs = async () => {\n      try {\n        const response = await fetch('http://localhost/path-to-your-api/reviews.php?resource=professors');\n        const data = await response.json();\n        setProfs(data);\n      } catch (error) {\n        console.error('Failed to fetch professors:', error);\n      }\n    };\n    const fetchCourses = async () => {\n      try {\n        const response = await fetch('http://localhost/path-to-your-api/reviews.php?resource=courses');\n        const data = await response.json();\n        setCourses(data);\n      } catch (error) {\n        console.error('Failed to fetch courses:', error);\n      }\n    };\n    fetchProfs();\n    fetchCourses();\n  }, []);\n\n  // Filter courses when a professor is selected\n  useEffect(() => {\n    if (newReview.professor_id) {\n      const filtered = courses.filter(course => course.professor_id === parseInt(newReview.professor_id));\n      setFilteredCourses(filtered);\n    } else {\n      setFilteredCourses([]);\n    }\n  }, [newReview.professor_id, courses]);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewReview(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  const handleRatingChange = rating => {\n    setNewReview(prevState => ({\n      ...prevState,\n      ratings: rating\n    }));\n  };\n  const handleCreateReview = async () => {\n    try {\n      const response = await fetch('http://localhost/path-to-your-api/reviews.php', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(newReview)\n      });\n      const result = await response.json();\n      if (response.ok) {\n        alert('Review submitted successfully!');\n        setNewReview({\n          course_id: '',\n          review_text: '',\n          ratings: 0,\n          professor_id: ''\n        });\n      } else {\n        console.error('Failed to submit review:', result.message);\n      }\n    } catch (error) {\n      console.error('Failed to create review:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"professor_id\",\n      value: newReview.professor_id,\n      onChange: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), profs.map(prof => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: prof.professor_id,\n        children: prof.name\n      }, prof.professor_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"course_id\",\n      value: newReview.course_id,\n      onChange: handleInputChange,\n      disabled: !newReview.professor_id,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Course\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this), filteredCourses.map(course => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: course.course_id,\n        children: course.course_name\n      }, course.course_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      name: \"review_text\",\n      value: newReview.review_text,\n      onChange: handleInputChange,\n      placeholder: \"Write your review here...\",\n      rows: \"5\",\n      style: {\n        width: '100%'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Rating:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), [1, 2, 3, 4, 5].map(star => /*#__PURE__*/_jsxDEV(\"span\", {\n        onClick: () => handleRatingChange(star),\n        style: {\n          cursor: 'pointer',\n          fontSize: '1.5em',\n          color: newReview.ratings >= star ? '#FFD700' : '#CCCCCC'\n        },\n        children: \"\\u2605\"\n      }, star, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateReview,\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewsPage, \"KHDlaoCcKntlODqxeu9/Y9OxHQQ=\");\n_c = ReviewsPage;\nexport default ReviewsPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewsPage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","ReviewsPage","_s","newReview","setNewReview","course_id","review_text","ratings","professor_id","profs","setProfs","courses","setCourses","filteredCourses","setFilteredCourses","fetchProfs","response","fetch","data","json","error","console","fetchCourses","filtered","filter","course","parseInt","handleInputChange","e","name","value","target","prevState","handleRatingChange","rating","handleCreateReview","method","headers","body","JSON","stringify","result","ok","alert","message","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","map","prof","disabled","course_name","placeholder","rows","style","width","star","onClick","cursor","fontSize","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/components/ReviewsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction ReviewsPage() {\r\n  const [newReview, setNewReview] = useState({\r\n    course_id: '',\r\n    review_text: '',\r\n    ratings: 0,\r\n    professor_id: '',\r\n  });\r\n  const [profs, setProfs] = useState([]);\r\n  const [courses, setCourses] = useState([]);\r\n  const [filteredCourses, setFilteredCourses] = useState([]);\r\n\r\n  // Fetch professors and courses on mount\r\n  useEffect(() => {\r\n    const fetchProfs = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost/path-to-your-api/reviews.php?resource=professors');\r\n        const data = await response.json();\r\n        setProfs(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch professors:', error);\r\n      }\r\n    };\r\n\r\n    const fetchCourses = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost/path-to-your-api/reviews.php?resource=courses');\r\n        const data = await response.json();\r\n        setCourses(data);\r\n      } catch (error) {\r\n        console.error('Failed to fetch courses:', error);\r\n      }\r\n    };\r\n\r\n    fetchProfs();\r\n    fetchCourses();\r\n  }, []);\r\n\r\n  // Filter courses when a professor is selected\r\n  useEffect(() => {\r\n    if (newReview.professor_id) {\r\n      const filtered = courses.filter(\r\n        (course) => course.professor_id === parseInt(newReview.professor_id)\r\n      );\r\n      setFilteredCourses(filtered);\r\n    } else {\r\n      setFilteredCourses([]);\r\n    }\r\n  }, [newReview.professor_id, courses]);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewReview((prevState) => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  const handleRatingChange = (rating) => {\r\n    setNewReview((prevState) => ({ ...prevState, ratings: rating }));\r\n  };\r\n\r\n  const handleCreateReview = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost/path-to-your-api/reviews.php', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(newReview),\r\n      });\r\n      const result = await response.json();\r\n\r\n      if (response.ok) {\r\n        alert('Review submitted successfully!');\r\n        setNewReview({ course_id: '', review_text: '', ratings: 0, professor_id: '' });\r\n      } else {\r\n        console.error('Failed to submit review:', result.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to create review:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Leave a Review</h1>\r\n      <select\r\n        name=\"professor_id\"\r\n        value={newReview.professor_id}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value=\"\">Select Professor</option>\r\n        {profs.map((prof) => (\r\n          <option key={prof.professor_id} value={prof.professor_id}>\r\n            {prof.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <select\r\n        name=\"course_id\"\r\n        value={newReview.course_id}\r\n        onChange={handleInputChange}\r\n        disabled={!newReview.professor_id}\r\n      >\r\n        <option value=\"\">Select Course</option>\r\n        {filteredCourses.map((course) => (\r\n          <option key={course.course_id} value={course.course_id}>\r\n            {course.course_name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n\r\n      <textarea\r\n        name=\"review_text\"\r\n        value={newReview.review_text}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Write your review here...\"\r\n        rows=\"5\"\r\n        style={{ width: '100%' }}\r\n      />\r\n\r\n      <div>\r\n        <p>Rating:</p>\r\n        {[1, 2, 3, 4, 5].map((star) => (\r\n          <span\r\n            key={star}\r\n            onClick={() => handleRatingChange(star)}\r\n            style={{\r\n              cursor: 'pointer',\r\n              fontSize: '1.5em',\r\n              color: newReview.ratings >= star ? '#FFD700' : '#CCCCCC',\r\n            }}\r\n          >\r\n            ★\r\n          </span>\r\n        ))}\r\n      </div>\r\n\r\n      <button onClick={handleCreateReview}>Submit Review</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}