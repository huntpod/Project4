{"ast":null,"code":"const API_BASE='http://localhost/projects/project4/api/index.php';const checkResponse=async response=>{if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Failed to fetch data');}return await response.json();};export const fetchReviews=async()=>{const response=await fetch(\"\".concat(API_BASE,\"?resource=reviews\"));return await checkResponse(response);};export const createReview=async review=>{const response=await fetch(\"\".concat(API_BASE,\"?resource=reviews\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(review)});return await checkResponse(response);};export const updateReview=async review=>{const response=await fetch(\"\".concat(API_BASE,\"?resource=reviews\"),{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(review)});return await checkResponse(response);};export const deleteReview=async reviewId=>{const response=await fetch(\"\".concat(API_BASE,\"?resource=reviews&id=\").concat(reviewId),{method:'DELETE'});return await checkResponse(response);};","map":{"version":3,"names":["API_BASE","checkResponse","response","ok","errorData","json","Error","message","fetchReviews","fetch","concat","createReview","review","method","headers","body","JSON","stringify","updateReview","deleteReview","reviewId"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = 'http://localhost/projects/project4/api/index.php';\r\n\r\nconst checkResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Failed to fetch data');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\nexport const fetchReviews = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createReview = async (review) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(review),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateReview = async (review) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(review),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteReview = async (reviewId) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews&id=${reviewId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};"],"mappings":"AAAA,KAAM,CAAAA,QAAQ,CAAG,kDAAkD,CAEnE,KAAM,CAAAC,aAAa,CAAG,KAAO,CAAAC,QAAQ,EAAK,CACxC,GAAI,CAACA,QAAQ,CAACC,EAAE,CAAE,CAChB,KAAM,CAAAC,SAAS,CAAG,KAAM,CAAAF,QAAQ,CAACG,IAAI,CAAC,CAAC,CACvC,KAAM,IAAI,CAAAC,KAAK,CAACF,SAAS,CAACG,OAAO,EAAI,sBAAsB,CAAC,CAC9D,CACA,MAAO,MAAM,CAAAL,QAAQ,CAACG,IAAI,CAAC,CAAC,CAC9B,CAAC,CAED,MAAO,MAAM,CAAAG,YAAY,CAAG,KAAAA,CAAA,GAAY,CACtC,KAAM,CAAAN,QAAQ,CAAG,KAAM,CAAAO,KAAK,IAAAC,MAAA,CAAIV,QAAQ,qBAAmB,CAAC,CAC5D,MAAO,MAAM,CAAAC,aAAa,CAACC,QAAQ,CAAC,CACtC,CAAC,CAED,MAAO,MAAM,CAAAS,YAAY,CAAG,KAAO,CAAAC,MAAM,EAAK,CAC5C,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAO,KAAK,IAAAC,MAAA,CAAIV,QAAQ,sBAAqB,CAC3Da,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,CACF,MAAO,MAAM,CAAAX,aAAa,CAACC,QAAQ,CAAC,CACtC,CAAC,CAED,MAAO,MAAM,CAAAgB,YAAY,CAAG,KAAO,CAAAN,MAAM,EAAK,CAC5C,KAAM,CAAAV,QAAQ,CAAG,KAAM,CAAAO,KAAK,IAAAC,MAAA,CAAIV,QAAQ,sBAAqB,CAC3Da,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CAAE,cAAc,CAAE,kBAAmB,CAAC,CAC/CC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAACL,MAAM,CAC7B,CAAC,CAAC,CACF,MAAO,MAAM,CAAAX,aAAa,CAACC,QAAQ,CAAC,CACtC,CAAC,CAED,MAAO,MAAM,CAAAiB,YAAY,CAAG,KAAO,CAAAC,QAAQ,EAAK,CAC9C,KAAM,CAAAlB,QAAQ,CAAG,KAAM,CAAAO,KAAK,IAAAC,MAAA,CAAIV,QAAQ,0BAAAU,MAAA,CAAwBU,QAAQ,EAAI,CAC1EP,MAAM,CAAE,QACV,CAAC,CAAC,CACF,MAAO,MAAM,CAAAZ,aAAa,CAACC,QAAQ,CAAC,CACtC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}