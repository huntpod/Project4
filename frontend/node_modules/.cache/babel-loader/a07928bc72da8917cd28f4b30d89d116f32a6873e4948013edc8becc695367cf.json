{"ast":null,"code":"const API_BASE='http://localhost/projects/project4/api/index.php';// Helpers\nconst checkResponse=async response=>{if(!response.ok){const errorData=await response.json();throw new Error(errorData.message||'Failed to fetch data');}return await response.json();};// Admins\nexport const fetchAdmins=async()=>{const response=await fetch(`${API_BASE}?resource=admins`);return await checkResponse(response);};export const createAdmin=async admin=>{const response=await fetch(`${API_BASE}?resource=admins`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(admin)});return await checkResponse(response);};export const updateAdmin=async admin=>{const response=await fetch(`${API_BASE}?resource=admins`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(admin)});return await checkResponse(response);};export const deleteAdmin=async adminId=>{const response=await fetch(`${API_BASE}?resource=admins&id=${adminId}`,{method:'DELETE'});return await checkResponse(response);};// Professors\nexport const fetchProfs=async()=>{const response=await fetch(`${API_BASE}?resource=profs`);return await checkResponse(response);};export const createProf=async prof=>{const response=await fetch(`${API_BASE}?resource=profs`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(prof)});return await checkResponse(response);};export const updateProf=async prof=>{const response=await fetch(`${API_BASE}?resource=profs`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(prof)});return await checkResponse(response);};export const deleteProf=async profId=>{const response=await fetch(`${API_BASE}?resource=profs&id=${profId}`,{method:'DELETE'});return await checkResponse(response);};// Departments\nexport const fetchDepartments=async()=>{const response=await fetch(`${API_BASE}?resource=departments`);return await checkResponse(response);};export const createDepartment=async department=>{const response=await fetch(`${API_BASE}?resource=departments`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(department)});return await checkResponse(response);};export const updateDepartment=async department=>{const response=await fetch(`${API_BASE}?resource=departments`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(department)});return await checkResponse(response);};export const deleteDepartment=async departmentId=>{const response=await fetch(`${API_BASE}?resource=departments&id=${departmentId}`,{method:'DELETE'});return await checkResponse(response);};// Courses\nexport const fetchCourses=async()=>{const response=await fetch(`${API_BASE}?resource=courses`);return await checkResponse(response);};export const createCourse=async course=>{const response=await fetch(`${API_BASE}?resource=courses`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(course)});return await checkResponse(response);};export const updateCourse=async course=>{const response=await fetch(`${API_BASE}?resource=courses`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(course)});return await checkResponse(response);};export const deleteCourse=async courseId=>{const response=await fetch(`${API_BASE}?resource=courses&id=${courseId}`,{method:'DELETE'});return await checkResponse(response);};// Reviews\nexport const fetchReviews=async()=>{const response=await fetch(`${API_BASE}?resource=reviews`);return await checkResponse(response);};export const createReview=async review=>{const response=await fetch(`${API_BASE}?resource=reviews`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(review)});return await checkResponse(response);};export const updateReview=async review=>{const response=await fetch(`${API_BASE}?resource=reviews`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify(review)});return await checkResponse(response);};export const deleteReview=async reviewId=>{const response=await fetch(`${API_BASE}?resource=reviews&id=${reviewId}`,{method:'DELETE'});return await checkResponse(response);};","map":{"version":3,"names":["API_BASE","checkResponse","response","ok","errorData","json","Error","message","fetchAdmins","fetch","createAdmin","admin","method","headers","body","JSON","stringify","updateAdmin","deleteAdmin","adminId","fetchProfs","createProf","prof","updateProf","deleteProf","profId","fetchDepartments","createDepartment","department","updateDepartment","deleteDepartment","departmentId","fetchCourses","createCourse","course","updateCourse","deleteCourse","courseId","fetchReviews","createReview","review","updateReview","deleteReview","reviewId"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/services/api.js"],"sourcesContent":["const API_BASE = 'http://localhost/projects/project4/api/index.php';\r\n\r\n// Helpers\r\nconst checkResponse = async (response) => {\r\n  if (!response.ok) {\r\n    const errorData = await response.json();\r\n    throw new Error(errorData.message || 'Failed to fetch data');\r\n  }\r\n  return await response.json();\r\n};\r\n\r\n// Admins\r\nexport const fetchAdmins = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=admins`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createAdmin = async (admin) => {\r\n  const response = await fetch(`${API_BASE}?resource=admins`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(admin),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateAdmin = async (admin) => {\r\n  const response = await fetch(`${API_BASE}?resource=admins`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(admin),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteAdmin = async (adminId) => {\r\n  const response = await fetch(`${API_BASE}?resource=admins&id=${adminId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Professors\r\nexport const fetchProfs = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=profs`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createProf = async (prof) => {\r\n  const response = await fetch(`${API_BASE}?resource=profs`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(prof),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateProf = async (prof) => {\r\n  const response = await fetch(`${API_BASE}?resource=profs`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(prof),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteProf = async (profId) => {\r\n  const response = await fetch(`${API_BASE}?resource=profs&id=${profId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Departments\r\nexport const fetchDepartments = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=departments`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createDepartment = async (department) => {\r\n  const response = await fetch(`${API_BASE}?resource=departments`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(department),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateDepartment = async (department) => {\r\n  const response = await fetch(`${API_BASE}?resource=departments`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(department),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteDepartment = async (departmentId) => {\r\n  const response = await fetch(`${API_BASE}?resource=departments&id=${departmentId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Courses\r\nexport const fetchCourses = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=courses`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createCourse = async (course) => {\r\n  const response = await fetch(`${API_BASE}?resource=courses`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(course),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateCourse = async (course) => {\r\n  const response = await fetch(`${API_BASE}?resource=courses`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(course),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteCourse = async (courseId) => {\r\n  const response = await fetch(`${API_BASE}?resource=courses&id=${courseId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\n// Reviews\r\nexport const fetchReviews = async () => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`);\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const createReview = async (review) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(review),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const updateReview = async (review) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews`, {\r\n    method: 'PUT',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(review),\r\n  });\r\n  return await checkResponse(response);\r\n};\r\n\r\nexport const deleteReview = async (reviewId) => {\r\n  const response = await fetch(`${API_BASE}?resource=reviews&id=${reviewId}`, {\r\n    method: 'DELETE',\r\n  });\r\n  return await checkResponse(response);\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}