{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\projects\\\\project4\\\\frontend\\\\src\\\\components\\\\ReviewsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { createReview, fetchProfs } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReviewsPage() {\n  _s();\n  const [newReview, setNewReview] = useState({\n    course_id: '',\n    review_text: '',\n    flagged: 0,\n    ratings: 0,\n    professor_id: ''\n  });\n  const [profs, setProfs] = useState([]);\n  useEffect(() => {\n    const loadData = async () => {\n      try {\n        const profsData = await fetchProfs();\n        setProfs(profsData);\n      } catch (error) {\n        console.error('Failed to fetch professors', error);\n      }\n    };\n    loadData();\n  }, []);\n  const handleCreateReview = async () => {\n    try {\n      await createReview(newReview);\n      setNewReview({\n        course_id: '',\n        review_text: '',\n        flagged: 0,\n        ratings: 0,\n        professor_id: ''\n      });\n      alert('Review submitted successfully!');\n    } catch (error) {\n      console.error('Failed to create review', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setNewReview(prevState => ({\n      ...prevState,\n      [name]: value\n    }));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Leave a Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"course_id\",\n      value: newReview.course_id,\n      onChange: handleInputChange,\n      placeholder: \"Course ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"review_text\",\n      value: newReview.review_text,\n      onChange: handleInputChange,\n      placeholder: \"Review Text\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      name: \"ratings\",\n      value: newReview.Ratings,\n      onChange: handleInputChange,\n      placeholder: \"Ratings\",\n      min: \"0\",\n      max: \"5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      name: \"flagged\",\n      checked: !!newReview.flagged,\n      onChange: e => handleInputChange({\n        target: {\n          name: 'flagged',\n          value: e.target.checked ? 1 : 0\n        }\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"flagged\",\n      children: \"Flagged\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      name: \"professor_id\",\n      value: newReview.professor_id,\n      onChange: handleInputChange,\n      children: [/*#__PURE__*/_jsxDEV(\"option\", {\n        value: \"\",\n        children: \"Select Professor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), profs.map(prof => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: prof.professor_id,\n        children: prof.name\n      }, prof.professor_id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateReview,\n      children: \"Submit Review\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_s(ReviewsPage, \"/VOGSiT3SsRcSxo+bMepHkCNiQA=\");\n_c = ReviewsPage;\nexport default ReviewsPage;\nvar _c;\n$RefreshReg$(_c, \"ReviewsPage\");","map":{"version":3,"names":["React","useState","useEffect","createReview","fetchProfs","jsxDEV","_jsxDEV","ReviewsPage","_s","newReview","setNewReview","course_id","review_text","flagged","ratings","professor_id","profs","setProfs","loadData","profsData","error","console","handleCreateReview","alert","handleInputChange","e","name","value","target","prevState","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","placeholder","Ratings","min","max","checked","htmlFor","map","prof","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/projects/project4/frontend/src/components/ReviewsPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { createReview, fetchProfs } from '../services/api';\r\n\r\nfunction ReviewsPage() {\r\n  const [newReview, setNewReview] = useState({ course_id: '', review_text: '', flagged: 0, ratings: 0, professor_id: '' });\r\n  const [profs, setProfs] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const loadData = async () => {\r\n      try {\r\n        const profsData = await fetchProfs();\r\n        setProfs(profsData);\r\n      } catch (error) {\r\n        console.error('Failed to fetch professors', error);\r\n      }\r\n    };\r\n\r\n    loadData();\r\n  }, []);\r\n\r\n  const handleCreateReview = async () => {\r\n    try {\r\n      await createReview(newReview);\r\n      setNewReview({ course_id: '', review_text: '', flagged: 0, ratings: 0, professor_id: '' });\r\n      alert('Review submitted successfully!');\r\n    } catch (error) {\r\n      console.error('Failed to create review', error);\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setNewReview(prevState => ({ ...prevState, [name]: value }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1>Leave a Review</h1>\r\n      <input\r\n        type=\"text\"\r\n        name=\"course_id\"\r\n        value={newReview.course_id}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Course ID\"\r\n      />\r\n      <input\r\n        type=\"text\"\r\n        name=\"review_text\"\r\n        value={newReview.review_text}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Review Text\"\r\n      />\r\n      <input\r\n        type=\"number\"\r\n        name=\"ratings\"\r\n        value={newReview.Ratings}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Ratings\"\r\n        min=\"0\"\r\n        max=\"5\"\r\n      />\r\n      <input\r\n        type=\"checkbox\"\r\n        name=\"flagged\"\r\n        checked={!!newReview.flagged}\r\n        onChange={(e) => handleInputChange({ target: { name: 'flagged', value: e.target.checked ? 1 : 0 } })}\r\n      />\r\n      <label htmlFor=\"flagged\">Flagged</label>\r\n      <select\r\n        name=\"professor_id\"\r\n        value={newReview.professor_id}\r\n        onChange={handleInputChange}\r\n      >\r\n        <option value=\"\">Select Professor</option>\r\n        {profs.map(prof => (\r\n          <option key={prof.professor_id} value={prof.professor_id}>\r\n            {prof.name}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <button onClick={handleCreateReview}>Submit Review</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReviewsPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}