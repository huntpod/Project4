const path = require('path');
const HtmlWebpackPlugin = require('html-webpack-plugin');

module.exports = {
    mode: 'development', // Change to 'production' for the final build
    entry: {
        index: './src/index.js', // Entry point for homepage
        admin: './src/admin.js', // Entry point for admin page
    },
    output: {
        filename: '[name].bundle.js', // Output bundles: index.bundle.js, admin.bundle.js
        path: path.resolve(__dirname, 'public'), // Output directory
        clean: true, // Clean the output directory before each build
    },
    module: {
        rules: [
            {
                test: /\.jsx?$/, // Handle .js and .jsx files
                exclude: /node_modules/, // Exclude dependencies
                use: {
                    loader: 'babel-loader',
                    options: {
                        presets: ['@babel/preset-env', '@babel/preset-react'], // Transpile modern JavaScript and React
                    },
                },
            },
            {
                test: /\.css$/, // Handle CSS files
                use: ['style-loader', 'css-loader'],
            },
            {
                test: /\.(png|jpg|gif|svg)$/, // Handle image files
                type: 'asset/resource',
            },
        ],
    },
    resolve: {
        extensions: ['.js', '.jsx'], // Resolve these file extensions
    },
    plugins: [
        new HtmlWebpackPlugin({
            filename: 'index.html', // Output for homepage
            template: './public/index.html', // Use existing template
            chunks: ['index'], // Include only the homepage bundle
        }),
        new HtmlWebpackPlugin({
            filename: 'admin.html', // Output for admin page
            template: './public/admin.html', // Use existing template
            chunks: ['admin'], // Include only the admin page bundle
        }),
    ],
    devServer: {
        static: {
            directory: path.resolve(__dirname, 'public'),
        },
        port: 3000, // Development server port
        hot: true, // Enable hot module replacement
    },
};
